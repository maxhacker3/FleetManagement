{"ast":null,"code":"var _jsxFileName = \"/Users/maxhecker/Desktop/Studium/HackaTUM/FleetManagement/dashboardd/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst taxiIcon = L.icon({\n  iconUrl: process.env.PUBLIC_URL + '/icons/Taxi.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\nconst customerIcon = L.icon({\n  iconUrl: process.env.PUBLIC_URL + '/icons/Customer.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\nfunction Map() {\n  _s();\n  const useMockData = true; // Umschalter: Mock-Daten oder Backend-Daten\n\n  // Dynamische Taxi-Daten\n  const [taxis, setTaxis] = useState([]);\n  const [customers, setCustomers] = useState([]);\n\n  // Mock-Daten\n  const mockTaxis = [{\n    id: 1,\n    position: [48.1351, 11.5820],\n    target: [48.1401, 11.5900]\n  }, {\n    id: 2,\n    position: [48.1371, 11.5750],\n    target: [48.1301, 11.5800]\n  }];\n  const mockCustomers = [{\n    id: 101,\n    position: [48.1371, 11.5750]\n  }, {\n    id: 102,\n    position: [48.1401, 11.5800]\n  }];\n  useEffect(() => {\n    if (useMockData) {\n      setTaxis(mockTaxis);\n      setCustomers(mockCustomers);\n    } else {\n      // Backend-Daten laden\n      fetch('http://localhost:5000/taxis') // Beispiel-Endpoint\n      .then(response => response.json()).then(data => setTaxis(data.taxis || [])).catch(error => console.error('Fehler beim Laden der Taxi-Daten:', error));\n      fetch('http://localhost:5000/customers') // Beispiel-Endpoint\n      .then(response => response.json()).then(data => setCustomers(data.customers || [])).catch(error => console.error('Fehler beim Laden der Kunden-Daten:', error));\n    }\n  }, [useMockData]);\n\n  // Effekt zur Simulation der Taxi-Bewegung\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTaxis(prevTaxis => prevTaxis.map(taxi => {\n        const [lat, lon] = taxi.position;\n        const [targetLat, targetLon] = taxi.target;\n\n        // Berechnung der neuen Position (schrittweise Ann채herung an das Ziel)\n        const newLat = lat + (targetLat - lat) * 0.01; // 1% Ann채herung\n        const newLon = lon + (targetLon - lon) * 0.01;\n        return {\n          ...taxi,\n          position: [newLat, newLon]\n        };\n      }));\n    }, 1000); // Aktualisiere jede Sekunde\n\n    return () => clearInterval(interval); // Cleanup bei Komponentendeaktivierung\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [48.1351, 11.5820],\n    zoom: 13,\n    style: {\n      height: '100%',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 OpenStreetMap contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), taxis.map(taxi => /*#__PURE__*/_jsxDEV(Marker, {\n      position: taxi.position,\n      icon: taxiIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Taxi \", taxi.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), \"Aktuelle Position: \", taxi.position.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, taxi.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)), customers.map(customer => /*#__PURE__*/_jsxDEV(Marker, {\n      position: customer.position,\n      icon: customerIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Kunde \", customer.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), \"Wartet auf Abholung\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, customer.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"vkF2KsCBGEhkhtf2A1PBWB6t5sA=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","taxiIcon","icon","iconUrl","process","env","PUBLIC_URL","iconSize","iconAnchor","popupAnchor","customerIcon","Map","_s","useMockData","taxis","setTaxis","customers","setCustomers","mockTaxis","id","position","target","mockCustomers","fetch","then","response","json","data","catch","error","console","interval","setInterval","prevTaxis","map","taxi","lat","lon","targetLat","targetLon","newLat","newLon","clearInterval","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","join","customer","_c","$RefreshReg$"],"sources":["/Users/maxhecker/Desktop/Studium/HackaTUM/FleetManagement/dashboardd/src/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nconst taxiIcon = L.icon({\n  iconUrl: process.env.PUBLIC_URL + '/icons/Taxi.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\n\nconst customerIcon = L.icon({\n  iconUrl: process.env.PUBLIC_URL + '/icons/Customer.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\n\nfunction Map() {\n  const useMockData = true; // Umschalter: Mock-Daten oder Backend-Daten\n\n  // Dynamische Taxi-Daten\n  const [taxis, setTaxis] = useState([]);\n  const [customers, setCustomers] = useState([]);\n\n  // Mock-Daten\n  const mockTaxis = [\n    { id: 1, position: [48.1351, 11.5820], target: [48.1401, 11.5900] },\n    { id: 2, position: [48.1371, 11.5750], target: [48.1301, 11.5800] }\n  ];\n\n  const mockCustomers = [\n    { id: 101, position: [48.1371, 11.5750] },\n    { id: 102, position: [48.1401, 11.5800] }\n  ];\n\n  useEffect(() => {\n    if (useMockData) {\n      setTaxis(mockTaxis);\n      setCustomers(mockCustomers);\n    } else {\n      // Backend-Daten laden\n      fetch('http://localhost:5000/taxis') // Beispiel-Endpoint\n        .then((response) => response.json())\n        .then((data) => setTaxis(data.taxis || []))\n        .catch((error) => console.error('Fehler beim Laden der Taxi-Daten:', error));\n\n      fetch('http://localhost:5000/customers') // Beispiel-Endpoint\n        .then((response) => response.json())\n        .then((data) => setCustomers(data.customers || []))\n        .catch((error) => console.error('Fehler beim Laden der Kunden-Daten:', error));\n    }\n  }, [useMockData]);\n\n  // Effekt zur Simulation der Taxi-Bewegung\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTaxis((prevTaxis) =>\n        prevTaxis.map((taxi) => {\n          const [lat, lon] = taxi.position;\n          const [targetLat, targetLon] = taxi.target;\n\n          // Berechnung der neuen Position (schrittweise Ann채herung an das Ziel)\n          const newLat = lat + (targetLat - lat) * 0.01; // 1% Ann채herung\n          const newLon = lon + (targetLon - lon) * 0.01;\n\n          return {\n            ...taxi,\n            position: [newLat, newLon]\n          };\n        })\n      );\n    }, 1000); // Aktualisiere jede Sekunde\n\n    return () => clearInterval(interval); // Cleanup bei Komponentendeaktivierung\n  }, []);\n\n  return (\n    <MapContainer\n      center={[48.1351, 11.5820]}\n      zoom={13}\n      style={{ height: '100%', width: '100%' }}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution=\"&copy; OpenStreetMap contributors\"\n      />\n\n      {/* Dynamisch bewegende Taxis */}\n      {taxis.map((taxi) => (\n        <Marker position={taxi.position} key={taxi.id} icon={taxiIcon}>\n          <Popup>\n            <strong>Taxi {taxi.id}</strong>\n            <br />\n            Aktuelle Position: {taxi.position.join(', ')}\n          </Popup>\n        </Marker>\n      ))}\n\n      {/* Statische Kunden-Positionen */}\n      {customers.map((customer) => (\n        <Marker position={customer.position} key={customer.id} icon={customerIcon}>\n          <Popup>\n            <strong>Kunde {customer.id}</strong>\n            <br />\n            Wartet auf Abholung\n          </Popup>\n        </Marker>\n      ))}\n    </MapContainer>\n  );\n}\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}