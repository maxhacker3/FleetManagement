{"ast":null,"code":"var _jsxFileName = \"/Users/maxhecker/Desktop/Studium/HackaTUM/FleetManagement/dashboardd/src/TaxiChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Registrierung der ChartJS-Komponenten\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction TaxiChart() {\n  _s();\n  const useMockData = true; // Umschalter: Mock-Daten oder Backend-Daten\n  const [taxis, setTaxis] = useState([]);\n\n  // Mock-Daten\n  const mockData = false; /*[\n                          { id: 1, distance: 100 },\n                          { id: 2, distance: 150 },\n                          { id: 3, distance: 200 },\n                          ];*/\n\n  // Daten laden\n  useEffect(() => {\n    if (useMockData) {\n      setTaxis(mockData);\n    } else {\n      fetch('http://localhost:8090/get_scenario/${id}') // Beispiel-Endpoint\n      .then(response => response.json()).then(data => setTaxis(data.taxis || [])).catch(error => console.error('Fehler beim Abrufen der Daten:', error));\n    }\n  }, [useMockData]);\n\n  // Datenaufbereitung f端r das Chart\n  const data = {\n    labels: taxis.map(taxi => `Taxi ${taxi.id || 'Unbekannt'}`),\n    datasets: [{\n      label: 'Gefahrene Kilometer',\n      data: taxis.map(taxi => taxi.distance || 0),\n      // Fallback auf 0\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n\n  // Optionen f端r das Chart\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Gefahrene Kilometer pro Taxi'\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Taxis'\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Gefahrene Kilometer'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '400px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(TaxiChart, \"Asjs6M/FdbJ5ILcKdcvmWaJqMTM=\");\n_c = TaxiChart;\nexport default TaxiChart;\nvar _c;\n$RefreshReg$(_c, \"TaxiChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Title","Tooltip","Legend","Bar","jsxDEV","_jsxDEV","register","TaxiChart","_s","useMockData","taxis","setTaxis","mockData","fetch","then","response","json","data","catch","error","console","labels","map","taxi","id","datasets","label","distance","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","display","position","title","text","scales","x","y","beginAtZero","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maxhecker/Desktop/Studium/HackaTUM/FleetManagement/dashboardd/src/TaxiChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, Title, Tooltip, Legend } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\n// Registrierung der ChartJS-Komponenten\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction TaxiChart() {\n  const useMockData = true; // Umschalter: Mock-Daten oder Backend-Daten\n  const [taxis, setTaxis] = useState([]);\n\n  // Mock-Daten\n  const mockData =false/*[\n    { id: 1, distance: 100 },\n    { id: 2, distance: 150 },\n    { id: 3, distance: 200 },\n  ];*/\n\n  // Daten laden\n  useEffect(() => {\n    if (useMockData) {\n      setTaxis(mockData);\n    } else {\n      fetch('http://localhost:8090/get_scenario/${id}') // Beispiel-Endpoint\n        .then((response) => response.json())\n        .then((data) => setTaxis(data.taxis || []))\n        .catch((error) => console.error('Fehler beim Abrufen der Daten:', error));\n    }\n  }, [useMockData]);\n\n  // Datenaufbereitung f端r das Chart\n  const data = {\n    labels: taxis.map((taxi) => `Taxi ${taxi.id || 'Unbekannt'}`),\n    datasets: [\n      {\n        label: 'Gefahrene Kilometer',\n        data: taxis.map((taxi) => taxi.distance || 0), // Fallback auf 0\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  // Optionen f端r das Chart\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Gefahrene Kilometer pro Taxi',\n      },\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Taxis',\n        },\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Gefahrene Kilometer',\n        },\n      },\n    },\n  };\n\n  return (\n    <div style={{ width: '100%', height: '400px' }}>\n      <Bar data={data} options={options} />\n    </div>\n  );\n}\n\nexport default TaxiChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}