{"ast":null,"code":"var _jsxFileName = \"/Users/maxhecker/Desktop/Studium/HackaTUM/FleetManagement/dashboardd/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Stats from './Stats';\nimport Map from './Map';\nimport './App.css'; // F端r das Layout\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const useMockData = true; // Umschalter: true = Mock-Daten, false = API-Daten\n\n  // Zentraler Zustand f端r Taxis und Kunden\n  const [taxis, setTaxis] = useState([]);\n  const [customers, setCustomers] = useState([]);\n\n  // Mock-Daten\n  const mockData = false;\n  /*{\n    taxis: [\n      { id: 1, position: [48.1351, 11.5820], target: [48.1401, 11.5900], distance: 100 },\n      { id: 2, position: [48.1371, 11.5750], target: [48.1301, 11.5800], distance: 150 },\n    ],\n    customers: [\n      { id: 101, position: [48.1371, 11.5750], destination: [48.1401, 11.5800] },\n      { id: 102, position: [48.1401, 11.5800], destination: [48.1450, 11.5850] },\n    ],\n  };*/\n\n  // Daten laden\n  useEffect(() => {\n    if (useMockData) {\n      // Mock-Daten verwenden\n      setTaxis(mockData.taxis);\n      setCustomers(mockData.customers);\n    } else {\n      // API-Daten laden\n      fetch('http://localhost:8090/get_scenario/${id}') // Beispiel-Endpoint\n      .then(response => response.json()).then(data => {\n        setTaxis(data.taxis || []);\n        setCustomers(data.customers || []);\n      }).catch(error => {\n        console.error('Fehler beim Abrufen der Daten:', error);\n      });\n    }\n  }, [useMockData]);\n\n  // Bewegung der Taxis simulieren\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTaxis(prevTaxis => prevTaxis.map(taxi => {\n        const [lat, lon] = taxi.position;\n        const [targetLat, targetLon] = taxi.target;\n        const diffLat = targetLat - lat;\n        const diffLon = targetLon - lon;\n        if (Math.abs(diffLat) < 0.0001 && Math.abs(diffLon) < 0.0001) {\n          return {\n            ...taxi,\n            position: [targetLat, targetLon]\n          };\n        }\n        const newLat = lat + diffLat * 0.01;\n        const newLon = lon + diffLon * 0.01;\n        return {\n          ...taxi,\n          position: [newLat, newLon]\n        };\n      }));\n    }, 1000);\n    return () => clearInterval(interval); // Cleanup\n  }, [taxis]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        taxis: taxis,\n        customers: customers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-container\",\n      children: /*#__PURE__*/_jsxDEV(Stats, {\n        taxis: taxis,\n        customers: customers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vkF2KsCBGEhkhtf2A1PBWB6t5sA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Stats","Map","jsxDEV","_jsxDEV","App","_s","useMockData","taxis","setTaxis","customers","setCustomers","mockData","fetch","then","response","json","data","catch","error","console","interval","setInterval","prevTaxis","map","taxi","lat","lon","position","targetLat","targetLon","target","diffLat","diffLon","Math","abs","newLat","newLon","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maxhecker/Desktop/Studium/HackaTUM/FleetManagement/dashboardd/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Stats from './Stats';\nimport Map from './Map';\nimport './App.css'; // F端r das Layout\n\nfunction App() {\n  const useMockData = true; // Umschalter: true = Mock-Daten, false = API-Daten\n\n  // Zentraler Zustand f端r Taxis und Kunden\n  const [taxis, setTaxis] = useState([]);\n  const [customers, setCustomers] = useState([]);\n\n  // Mock-Daten\n  const mockData = false\n  /*{\n    taxis: [\n      { id: 1, position: [48.1351, 11.5820], target: [48.1401, 11.5900], distance: 100 },\n      { id: 2, position: [48.1371, 11.5750], target: [48.1301, 11.5800], distance: 150 },\n    ],\n    customers: [\n      { id: 101, position: [48.1371, 11.5750], destination: [48.1401, 11.5800] },\n      { id: 102, position: [48.1401, 11.5800], destination: [48.1450, 11.5850] },\n    ],\n  };*/\n\n  // Daten laden\n  useEffect(() => {\n    if (useMockData) {\n      // Mock-Daten verwenden\n      setTaxis(mockData.taxis);\n      setCustomers(mockData.customers);\n    } else {\n      // API-Daten laden\n      fetch('http://localhost:8090/get_scenario/${id}') // Beispiel-Endpoint\n        .then((response) => response.json())\n        .then((data) => {\n          setTaxis(data.taxis || []);\n          setCustomers(data.customers || []);\n        })\n        .catch((error) => {\n          console.error('Fehler beim Abrufen der Daten:', error);\n        });\n    }\n  }, [useMockData]);\n\n  // Bewegung der Taxis simulieren\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTaxis((prevTaxis) =>\n        prevTaxis.map((taxi) => {\n          const [lat, lon] = taxi.position;\n          const [targetLat, targetLon] = taxi.target;\n\n          const diffLat = targetLat - lat;\n          const diffLon = targetLon - lon;\n\n          if (Math.abs(diffLat) < 0.0001 && Math.abs(diffLon) < 0.0001) {\n            return { ...taxi, position: [targetLat, targetLon] };\n          }\n\n          const newLat = lat + diffLat * 0.01;\n          const newLon = lon + diffLon * 0.01;\n\n          return {\n            ...taxi,\n            position: [newLat, newLon],\n          };\n        })\n      );\n    }, 1000);\n\n    return () => clearInterval(interval); // Cleanup\n  }, [taxis]);\n\n  return (\n    <div className=\"dashboard\">\n      {/* Kartenbereich */}\n      <div className=\"map-container\">\n        <Map taxis={taxis} customers={customers} />\n      </div>\n\n      {/* Parameterbereich */}\n      <div className=\"stats-container\">\n        <Stats taxis={taxis} customers={customers} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}